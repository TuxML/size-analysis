MAX_STACK_SIZE_MB;This is the maximum stack size in Megabytes in the VM layout of 32-bit user processes when the stack grows upwards (currently only on parisc and metag arch). The stack will be located at the highest memory address minus the given value, unless the RLIMIT_STACK hard limit is changed to a smaller value in which case that is used.  A sane initial value is 80 MB.
TCP_CONG_CUBIC;This is version 2.0 of BIC-TCP which uses a cubic growth function among other techniques. See http://www.csc.ncsu.edu/faculty/rhee/export/bitcp/cubic-paper.pdf
TCP_CONG_NV;TCP NV is a follow up to TCP Vegas. It has been modified to deal with 10G networks, measurement noise introduced by LRO, GRO and interrupt coalescence. In addition, it will decrease its cwnd multiplicatively instead of linearly.  Note that in general congestion avoidance (cwnd decreased when # packets queued grows) cannot coexist with congestion control (cwnd decreased only when there is packet loss) due to fairness issues. One scenario when they can coexist safely is when the CA flows have RTTs << CC flows RTTs.  For further details see http://www.brakmo.org/networking/tcp-nv/
IMA_KEXEC;TPM PCRs are only reset on a hard reboot.  In order to validate a TPM's quote after a soft boot, the IMA measurement list of the running kernel must be saved and restored on boot.  Depending on the IMA policy, the measurement list can grow to be very large.
BLK_DEV_SIMDISK_COUNT;This is the default minimal number of created block devices. Kernel/module parameter 'simdisk_count' may be used to change this value at runtime. More file names (but no more than 10) may be specified as parameters, simdisk_count grows accordingly.
DUMP_CODE;This prints out a code trace of the instructions leading up to the faulting instruction as a debugging aid. As this does grow the kernel in size a bit, most users will want to say N here.  Those looking for more verbose debugging output should say Y.
